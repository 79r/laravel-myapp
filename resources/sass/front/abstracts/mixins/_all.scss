
/** Mixin to prefix a property
  * @author Hugo Giraudel
  * @param {String} $property - Property name
  * @param {*} $value - Property value
  * @param {List} $prefixes (()) - List of prefixes to print
  */
@mixin prefix($property, $value, $prefixes: ()) {
	@each $prefix in $prefixes {
		#{'-' + $prefix + '-' + $property}: $value;
	}
	// Output standard non-prefixed declaration
	#{$property}: $value;
}


/** box-shadow
  * Sytnax : box-shadow: none|h-offset v-offset blur spread color |inset|initial|inherit;
  * @author Riski Web ID
  * @param {*} $hOffset 	- Property horizontal offset
  * @param {*} $vOffset 	- Property vertical offset
  * @param {*} $blur 		- Property blur value
  * @param {*} $color 	- Property color value
  */
@mixin box-shadow($hOffset, $vOffset, $blur, $spread, $color) {
	box-shadow: $hOffset $vOffset $blur $spread $color;
	-moz-box-shadow: $hOffset $vOffset $blur $spread $color;
	-webkit-box-shadow: $hOffset $vOffset $blur $spread $color;
}

@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
		-o-transform-origin: $origin;
		-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
		transform-origin: $origin;
}

@mixin transition ($property : all .3s ease) {
	-webkit-transition: $property;
	-moz-transition: $property;
	-ms-transition: $property;
	-o-transition: $property;
	transition: $property;
}

/** Transform */
@mixin transform($property) {
	-webkit-transform: $property;
	-moz-transform: $property;
	-ms-transform: $property;
	transform: $property;
}

// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
} 
// translate
@mixin translate($x, $y) {
	@include transform(translate($x, $y));
}

@mixin translateY($value) {
	@include transform(translateY($value));
}

// skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}